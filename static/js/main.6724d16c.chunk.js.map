{"version":3,"sources":["component/ToolbarItem.js","utils/index.js","component/PopupContent.js","component/Toolbar.js","component/MindMap.js","App.js","serviceWorker.js","index.js"],"names":["ToolbarItem","diagramState","onChange","config","op","className","cx","icon","onClick","opType","clickHandler","title","label","downloadFile","url","filename","link","document","createElement","href","download","click","PopupExportContent","props","model","getModel","data","convertMindMapModelToRaw","json","JSON","stringify","encodeURIComponent","Popup","close","PopupOpenFileContent","input","type","accept","console","log","addEventListener","evt","file","target","files","fr","FileReader","onload","txt","result","obj","parse","convertRawToMindMapModel","newDiagramState","DiagramState","setModel","readAsText","PopupChangeTheme","changeTheme","theme","newConfig","getConfig","setConfig","themes","themeConfigs","list","Object","keys","forEach","key","push","name","style","background","color","primary","renderThemes","Toolbar","debug","showPopupExport","create","content","showPopupOpenFile","showPopupChangeTheme","handleUndo","undo","handleRedo","redo","items","OpType","ADD_SIBLING","ADD_CHILD","DELETE_NODE","this","toolbarItems","map","item","React","Component","MindMap","setState","onKeyDown","e","focusItemMode","getFocusItemMode","FocusItemMode","Normal","PopupMenu","preventDefault","onKeyUp","which","Keys","TAB","RETURN","Editing","ctrlKey","nodeKey","arg","state","newState","mindModel","MindMapModel","createWith","rootItemKey","editorRootItemKey","subItemKeys","parentKey","collapse","hMargin","removeEventListener","App","Boolean","window","location","hostname","match","localStorage","join","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6724d16c.chunk.js","sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\n\nexport const ToolbarItem = ({ diagramState, onChange, config, op }) => {\n  const onClick = () => {\n    if (config.opType) {\n      op(config.opType, null);\n    } else if (config.clickHandler) {\n      config.clickHandler(diagramState, onChange);\n    }\n  };\n  return (\n    <i\n      className={cx(\"bm-toolbar-item\", \"iconfont\", `bm-${config.icon}`)}\n      onClick={onClick}\n      title={config.label}\n    />\n  );\n};\n","export const downloadFile = (url, filename) => {\n  const link = document.createElement(\"a\");\n  link.href = url;\n  link.download = filename;\n  link.click();\n};\n","import React from \"react\";\nimport \"./PopupContent.css\";\nimport {\n  convertMindMapModelToRaw,\n  convertRawToMindMapModel,\n  DiagramState\n} from \"blink-mind-react\";\nimport { downloadFile } from \"../utils\";\nimport Popup from \"react-popup\";\n\nexport function PopupExportContent(props) {\n  const exportJSON = () => {\n    let model = props.diagramState.getModel();\n    const data = convertMindMapModelToRaw(model);\n    let json = JSON.stringify(data);\n    let url = `data:text/plain,${encodeURIComponent(json)}`;\n    downloadFile(url, `${data.title}.json`);\n    Popup.close();\n  };\n\n  return (\n    <div className=\"popup-content\">\n      <ul className=\"popup-content-list\">\n        <li className=\"popup-content-list-item\" onClick={exportJSON}>\n          JSON (.json)\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport function PopupOpenFileContent(props) {\n  let { diagramState, onChange } = props;\n  const openFile = () => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = \".json\";\n    console.log(\"add onchange\");\n    input.addEventListener(\"change\", evt => {\n      const file = evt.target.files[0];\n      const fr = new FileReader();\n      console.log(\"add fr onload\");\n      fr.onload = evt => {\n        const txt = evt.target.result;\n        let obj = JSON.parse(txt);\n        console.log(obj);\n        let model = convertRawToMindMapModel(obj);\n        let newDiagramState = DiagramState.setModel(diagramState, model);\n        onChange(newDiagramState);\n      };\n      fr.readAsText(file);\n    });\n    input.click();\n    Popup.close();\n  };\n\n  return (\n    <div className=\"popup-content\">\n      <div>Support for opening files in the following format</div>\n      <ul className=\"popup-content-list\">\n        <li className=\"popup-content-list-item\">JSON (.json)</li>\n      </ul>\n\n      <div>\n        <button className=\"popup-btn\" onClick={openFile}>\n          Open File\n        </button>\n        <button className=\"popup-btn\">Cancel</button>\n      </div>\n    </div>\n  );\n}\n\nexport function PopupChangeTheme(props) {\n  const changeTheme = theme => {\n    let { diagramState, onChange } = props;\n    let newConfig = { ...diagramState.getConfig(), theme: theme };\n    let newState = DiagramState.setConfig(diagramState, newConfig);\n    onChange(newState);\n  };\n  const renderThemes = themes => {\n    let list = [];\n    Object.keys(themes).forEach(key => {\n      let theme = themes[key];\n      list.push(\n        <li\n          className=\"popup-content-list-item\"\n          key={key}\n          onClick={() => changeTheme(key)}\n        >\n          <span>{theme.name}</span>\n          <div\n            className=\"theme-color\"\n            style={{ background: theme.color.primary }}\n          />\n        </li>\n      );\n    });\n    return list;\n  };\n  let { diagramState } = props;\n  let themes = diagramState.getConfig().themeConfigs;\n  console.log(themes);\n  return (\n    <div className=\"popup-content\">\n      <ul className=\"popup-content-list\">{renderThemes(themes)}</ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ToolbarItem } from \"./ToolbarItem\";\nimport \"./Toolbar.css\";\nimport { OpType, DiagramState } from \"blink-mind-react\";\nimport {\n  PopupChangeTheme,\n  PopupExportContent,\n  PopupOpenFileContent\n} from \"./PopupContent\";\nimport Popup from \"react-popup\";\nimport debug from \"debug\";\n\nconst log = debug(\"app\");\n\nexport class Toolbar extends React.Component {\n  showPopupExport = diagramState => {\n    Popup.create({\n      title: \"Please select export file format\",\n      content: <PopupExportContent diagramState={diagramState} />\n    });\n  };\n\n  showPopupOpenFile = (diagramState, onChange) => {\n    Popup.create({\n      title: \"Open File\",\n      content: (\n        <PopupOpenFileContent diagramState={diagramState} onChange={onChange} />\n      )\n    });\n  };\n\n  showPopupChangeTheme = (diagramState, onChange) => {\n    Popup.create({\n      title: \"Change Theme\",\n      content: (\n        <PopupChangeTheme diagramState={diagramState} onChange={onChange} />\n      )\n    });\n  };\n\n  handleUndo = diagramState => {\n    this.props.onChange(DiagramState.undo(diagramState));\n  };\n\n  handleRedo = diagramState => {\n    this.props.onChange(DiagramState.redo(diagramState));\n  };\n\n  items = [\n    // {\n    //   icon: \"newfile\",\n    //   label: \"new file\"\n    // },\n    {\n      icon: \"openfile\",\n      label: \"open file\",\n      clickHandler: this.showPopupOpenFile\n    },\n    {\n      icon: \"export\",\n      label: \"export file\",\n      clickHandler: this.showPopupExport\n    },\n    {\n      icon: \"theme\",\n      label: \"change theme\",\n      clickHandler: this.showPopupChangeTheme\n    },\n    {\n      icon: \"add-sibling\",\n      label: \"add sibling\",\n      opType: OpType.ADD_SIBLING\n    },\n    {\n      icon: \"add-child\",\n      label: \"add child\",\n      opType: OpType.ADD_CHILD\n    },\n    {\n      icon: \"delete-node\",\n      label: \"delete node\",\n      opType: OpType.DELETE_NODE\n    },\n    {\n      icon: \"undo\",\n      label: \"undo\",\n      clickHandler: this.handleUndo\n    },\n    {\n      icon: \"redo\",\n      label: \"redo\",\n      clickHandler: this.handleRedo\n    }\n  ];\n\n  render() {\n    let { diagramState, onChange, op } = this.props;\n    let toolbarItems = this.items.map(item => (\n      <ToolbarItem\n        config={item}\n        key={item.label}\n        diagramState={diagramState}\n        onChange={onChange}\n        op={op}\n      />\n    ));\n    return (\n      <div>\n        <div className=\"bm-toolbar\">{toolbarItems}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Keys from \"fbjs/lib/Keys\";\nimport {\n  DiagramWidget,\n  MindMapModel,\n  DiagramState,\n  OpType,\n  FocusItemMode\n} from \"blink-mind-react\";\n\nimport { Toolbar } from \"./Toolbar\";\n\nexport class MindMap extends React.Component {\n  constructor(props) {\n    super(props);\n    let mindModel = MindMapModel.createWith({\n      rootItemKey: \"root\",\n      editorRootItemKey: \"root\",\n      items: [\n        { key: \"root\", content: \"MainTopic\", subItemKeys: [\"sub1\", \"sub2\"] },\n        {\n          key: \"sub1\",\n          parentKey: \"root\",\n          content: \"SubTopic\",\n          subItemKeys: [],\n          collapse: true\n        },\n        {\n          key: \"sub2\",\n          parentKey: \"root\",\n          content: \"SubTopic\",\n          subItemKeys: []\n        }\n      ]\n    });\n    let diagramConfig = {\n      hMargin: 10\n    };\n    let diagramState = DiagramState.createWith(mindModel, diagramConfig);\n    this.state = {\n      diagramState: diagramState\n    };\n  }\n\n  getFocusItemMode() {\n    return this.state.diagramState.getModel().getFocusItemMode();\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n    document.addEventListener(\"keyup\", this.onKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n    document.removeEventListener(\"keyup\", this.onKeyUp);\n  }\n\n  onChange = diagramState => {\n    this.setState({ diagramState });\n  };\n\n  onKeyDown = e => {\n    let focusItemMode = this.getFocusItemMode();\n    if (\n      focusItemMode === FocusItemMode.Normal ||\n      focusItemMode === FocusItemMode.PopupMenu\n    ) {\n      e.preventDefault();\n    }\n  };\n\n  onKeyUp = e => {\n    console.log(e);\n    let focusItemMode = this.getFocusItemMode();\n    switch (e.which) {\n      case Keys.TAB:\n        if (\n          focusItemMode === FocusItemMode.Normal ||\n          focusItemMode === FocusItemMode.PopupMenu\n        ) {\n          this.op(OpType.ADD_CHILD);\n        }\n        break;\n      case Keys.RETURN:\n        if (\n          focusItemMode === FocusItemMode.Normal ||\n          focusItemMode === FocusItemMode.PopupMenu\n        ) {\n          this.op(OpType.ADD_SIBLING);\n        }\n        if (focusItemMode === FocusItemMode.Editing) {\n          if (e.ctrlKey) {\n            this.op(OpType.ADD_SIBLING);\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  op = (opType, nodeKey, arg) => {\n    let { diagramState } = this.state;\n    let newState = DiagramState.op(diagramState, opType, nodeKey, arg);\n    this.onChange(newState);\n  };\n\n  render() {\n    return (\n      <div className=\"mindmap\">\n        <Toolbar\n          diagramState={this.state.diagramState}\n          onChange={this.onChange}\n          op={this.op}\n        />\n        <DiagramWidget\n          diagramState={this.state.diagramState}\n          onChange={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MindMap;\n","import React from \"react\";\nimport MindMap from \"./component/MindMap\";\nimport \"./App.css\";\nimport \"./popup.css\";\n\nfunction App() {\n  return <MindMap />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Popup from \"react-popup\";\n\nlet debugNameSpaces = [\n  \"app\",\n  // \"node:*\",\n  \"model:*\"\n  // \"render:*\"\n  // \"-node:LinkWidget\"\n];\n\nlocalStorage.debug = debugNameSpaces.join(\",\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nReactDOM.render(<Popup />, document.getElementById(\"popup\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}